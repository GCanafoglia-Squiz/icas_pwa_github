{"version":3,"sources":["source/js/sw.js"],"names":[],"mappings":"AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"sw.js","sourcesContent":["// importScripts('https://storage.googleapis.com/workbox-cdn/releases/4.1.1/workbox-sw.js');\n\n// workbox.setConfig({ debug: true });\n// workbox.core.setCacheNameDetails({prefix: \"ICAS-Statics\"});\n\n// with callback example\n//\n// const excludeImages = ({url, event}) => {\n//   var imgRgx = /.*(?:jpg|jpeg|png|gif|svg)$/\n//   var siteRgx = /^https:\\/\\/toolbox\\.energyinst\\.org.*$/\n//   if (url.href.match(siteRgx)) {\n//     if (url.pathname.match(imgRgx)) {\n//       return false;\n//     } return true;\n//   } return false;\n// };\n//\n// workbox.routing.registerRoute(\n//     excludeImages,\n//     workbox.strategies.networkFirst({\n//       cacheName: 'toolbox-pages',\n//     })\n// );\n\n// workbox.routing.registerRoute(\n//     new RegExp('^https:\\\\/\\\\/app\\\\.icas\\\\.com\\\\/.(.(?!\\\\.js$|json$|css$|png$|gif$|jpg$|jpeg$|svg$|ico$))+$'),\n//     new workbox.strategies.NetworkFirst({\n//       cacheName: 'ICAS-Dynamics',\n//     })\n// );\n//\n//\n// workbox.precaching.precacheAndRoute([\n//   {\n//     \"url\": \"/__data/assets/git_bridge/0005/450572/dist/js/global.js\",\n//     \"revision\": \"%globals_asset_assetid:450572^as_asset:asset_updated^prepend:global^base64encode%\"\n//   },\n//   {\n//     \"url\": \"/__data/assets/git_bridge/0005/450572/dist/js/plugins.min.js\",\n//     \"revision\": \"%globals_asset_assetid:450572^as_asset:asset_updated^prepend:plugins^base64encode%\"\n//   },\n//   {\n//     \"url\": \"/__data/assets/git_bridge/0005/450572/dist/js/vendor/jquery.min.js\",\n//     \"revision\": \"%globals_asset_assetid:450572^as_asset:asset_updated^prepend:jquery^base64encode%\"\n//   },\n//   {\n//     \"url\": \"/__data/assets/git_bridge/0005/450572/dist/styles/main.css\",\n//     \"revision\": \"%globals_asset_assetid:450572^as_asset:asset_updated^prepend:main^base64encode%\"\n//   },\n//   {\n//     \"url\": \"/manifest.json\",\n//     \"revision\": \"%globals_asset_assetid:450699^as_asset:asset_updated^prepend:manifest^base64encode%\"\n//   }\n//\n// ]);\n\n//note\n// assets under precacheAndRoute are precached and can be accessed with a fallback. for example:\n//\n//EXAMPLE START\n//\n//this is the handler\n// const articleHandler = workbox.strategies.networkFirst({\n//   cacheName: 'articles-cache',\n//   plugins: [\n//     new workbox.expiration.Plugin({\n//       maxEntries: 50,\n//     })\n//   ]\n// });\n//\n//\n//this is the router: in this case we uase the previously create handler to manage the response.\n//if the asset cannot be accessed, the pages offline or 404 (previously added to precacheAndRoute)\n//will be accessed.\n// workbox.routing.registerRoute(/(.*)article(.*)\\.html/, args => {\n//   return articleHandler.handle(args).then(response => {\n//     if (!response) {\n//       return caches.match('pages/offline.html');\n//     } else if (response.status === 404) {\n//       return caches.match('pages/404.html');\n//     }\n//     return response;\n//   });\n// });\n//\n// EXAMPLE END\n\n\n//I can also try to load some pages that have non yet been seen\n//google example code at https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#network-falling-back-to-cache\n//\n// self.addEventListener('fetch', function(event) {\n//   event.respondWith(\n//       fetch(event.request).catch(function() {\n//         return caches.match(event.request);\n//       })\n//   );\n// });\n//\n//\n// or even better this: investigate please\n// https://developers.google.com/web/fundamentals/instant-and-offline/offline-cookbook/#cache-then-network"]}